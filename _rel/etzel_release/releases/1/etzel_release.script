%% script generated at {2016,1,1} {0,36,52}
{script,
    {"etzel_release","1"},
    [{preLoaded,
         [erl_prim_loader,erlang,erts_internal,init,otp_ring0,prim_eval,
          prim_file,prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-4.0/ebin","$ROOT/lib/stdlib-2.5/ebin"]},
     {primLoad,[error_handler]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/uuid-git/ebin"]},
     {primLoad,[uuid]},
     {path,["$ROOT/lib/kernel-4.0/ebin"]},
     {primLoad,
         [application,application_controller,application_master,
          application_starter,auth,code,code_server,disk_log,disk_log_1,
          disk_log_server,disk_log_sup,dist_ac,dist_util,erl_boot_server,
          erl_ddll,erl_distribution,erl_epmd,erl_reply,error_logger,
          erts_debug,file,file_io_server,file_server,gen_sctp,gen_tcp,gen_udp,
          global,global_group,global_search,group,heart,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel,kernel_config,net,
          net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,standard_error,
          user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-2.5/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_anno,erl_bits,erl_compile,erl_eval,
          erl_expand_records,erl_internal,erl_lint,erl_parse,erl_posix_msg,
          erl_pp,erl_scan,erl_tar,error_logger_file_h,error_logger_tty_h,
          escript,ets,eval_bits,file_sorter,filelib,filename,gb_sets,gb_trees,
          gen,gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
          io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proc_lib,proplists,
          qlc,qlc_pt,queue,rand,random,re,sets,shell,shell_default,slave,sofs,
          string,supervisor,supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/gproc-git/ebin"]},
     {primLoad,
         [gproc,gproc_app,gproc_bcast,gproc_dist,gproc_info,gproc_init,
          gproc_lib,gproc_monitor,gproc_pool,gproc_ps,gproc_pt,gproc_sup]},
     {path,["$ROOT/lib/ranch-1.1.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_listener_sup,ranch_protocol,ranch_server,ranch_ssl,ranch_sup,
          ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/crypto-3.6/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/jiffy-git/ebin"]},
     {primLoad,[jiffy,jiffy_utf8]},
     {path,["$ROOT/lib/eleveldb-git/ebin"]},
     {primLoad,[eleveldb,eleveldb_bump]},
     {path,["$ROOT/lib/mustache-0.1.1/ebin"]},
     {primLoad,[mustache,mustache_ctx]},
     {path,["$ROOT/lib/esqlite-0.1.1/ebin"]},
     {primLoad,[esqlite3,esqlite3_nif]},
     {path,["$ROOT/lib/cowlib-1.0.1/ebin"]},
     {primLoad,
         [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy]},
     {path,["$ROOT/lib/cowboy_session-git/ebin"]},
     {primLoad,
         [cowboy_session,cowboy_session_config,cowboy_session_server,
          cowboy_session_server_sup,cowboy_session_storage,
          cowboy_session_storage_ets]},
     {path,["$ROOT/lib/cowboy-1.0.1/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_clock,cowboy_handler,
          cowboy_http,cowboy_http_handler,cowboy_loop_handler,
          cowboy_middleware,cowboy_protocol,cowboy_req,cowboy_rest,
          cowboy_router,cowboy_spdy,cowboy_static,cowboy_sub_protocol,
          cowboy_sup,cowboy_websocket,cowboy_websocket_handler]},
     {path,["$ROOT/lib/etzel-0.1.0/ebin"]},
     {primLoad,
         [checklogin_middleware,commonlib,datamanager,etzel_app,etzel_sup,
          etzeldisk,filegen,get_session,hello_handler,home_handler,
          login_handler,qin,queue_handler,queue_list_handler,servermanager,tq,
          uidgen,ws_handler]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/uuid-git/ebin","$ROOT/lib/kernel-4.0/ebin",
          "$ROOT/lib/stdlib-2.5/ebin","$ROOT/lib/gproc-git/ebin",
          "$ROOT/lib/ranch-1.1.0/ebin","$ROOT/lib/crypto-3.6/ebin",
          "$ROOT/lib/jiffy-git/ebin","$ROOT/lib/eleveldb-git/ebin",
          "$ROOT/lib/mustache-0.1.1/ebin","$ROOT/lib/esqlite-0.1.1/ebin",
          "$ROOT/lib/cowlib-1.0.1/ebin","$ROOT/lib/cowboy_session-git/ebin",
          "$ROOT/lib/cowboy-1.0.1/ebin","$ROOT/lib/etzel-0.1.0/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"4.0"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,net,net_adm,net_kernel,os,ram_file,rpc,
                        user,user_drv,user_sup,disk_log,disk_log_1,
                        disk_log_server,disk_log_sup,dist_ac,erl_ddll,
                        erl_epmd,erts_debug,gen_tcp,gen_udp,gen_sctp,inet,
                        inet_db,inet_dns,inet_parse,inet_res,inet_tcp,
                        inet_udp,inet_sctp,pg2,seq_trace,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,uuid,
                  [{description,"UUID v4 (random) generation and utilities"},
                   {vsn,"git"},
                   {id,[]},
                   {modules,[uuid]},
                   {registered,[]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"2.5"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_anno,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,io,io_lib,io_lib_format,
                        io_lib_fread,io_lib_pretty,lib,lists,log_mf_h,maps,
                        math,ms_transform,orddict,ordsets,otp_internal,pool,
                        proc_lib,proplists,qlc,qlc_pt,queue,rand,random,re,
                        sets,shell,shell_default,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gproc,
                  [{description,"GPROC"},
                   {vsn,"git"},
                   {id,"GPROC"},
                   {modules,
                       [gproc,gproc_app,gproc_bcast,gproc_dist,gproc_info,
                        gproc_init,gproc_lib,gproc_monitor,gproc_pool,
                        gproc_ps,gproc_pt,gproc_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gproc_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.1.0"},
                   {id,"1.1.0-dirty"},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_listener_sup,ranch_protocol,
                        ranch_server,ranch_ssl,ranch_sup,ranch_tcp,
                        ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"3.6"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jiffy,
                  [{description,"JSON Decoder/Encoder."},
                   {vsn,"git"},
                   {id,[]},
                   {modules,[jiffy,jiffy_utf8]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,eleveldb,
                  [{description,[]},
                   {vsn,"git"},
                   {id,[]},
                   {modules,[eleveldb,eleveldb_bump]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,
                       [{total_leveldb_mem_percent,15},
                        {use_bloomfilter,true}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mustache,
                  [{description,"Mustache Templates Rendering Library"},
                   {vsn,"0.1.1"},
                   {id,[]},
                   {modules,[mustache,mustache_ctx]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,esqlite,
                  [{description,"sqlite nif interface"},
                   {vsn,"0.1.1"},
                   {id,[]},
                   {modules,[esqlite3,esqlite3_nif]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"1.0.1"},
                   {id,"1.0.1-dirty"},
                   {modules,
                       [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowboy_session,
                  [{description,"Cowboy session management"},
                   {vsn,"git"},
                   {id,[]},
                   {modules,
                       [cowboy_session,cowboy_session_config,
                        cowboy_session_server,cowboy_session_server_sup,
                        cowboy_session_storage,cowboy_session_storage_ets]},
                   {registered,[]},
                   {applications,[uuid,kernel,stdlib,gproc]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_session,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modular HTTP server."},
                   {vsn,"1.0.1"},
                   {id,"1.0.1-dirty"},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_clock,
                        cowboy_handler,cowboy_http,cowboy_http_handler,
                        cowboy_loop_handler,cowboy_middleware,cowboy_protocol,
                        cowboy_req,cowboy_rest,cowboy_router,cowboy_spdy,
                        cowboy_static,cowboy_sub_protocol,cowboy_sup,
                        cowboy_websocket,cowboy_websocket_handler]},
                   {registered,[cowboy_clock,cowboy_sup]},
                   {applications,[kernel,stdlib,ranch,crypto,cowlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,etzel,
                  [{description,[]},
                   {vsn,"0.1.0"},
                   {id,"v.0.2.0-16-gc2c3cbc-dirty"},
                   {modules,
                       [checklogin_middleware,commonlib,datamanager,etzel_app,
                        etzel_sup,etzeldisk,filegen,get_session,hello_handler,
                        home_handler,login_handler,qin,queue_handler,
                        queue_list_handler,servermanager,tq,uidgen,
                        ws_handler]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,jiffy,eleveldb,mustache,esqlite,esqlite,
                        cowboy_session,cowboy]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{etzel_app,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[uuid,permanent]}},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[gproc,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[jiffy,permanent]}},
     {apply,{application,start_boot,[eleveldb,permanent]}},
     {apply,{application,start_boot,[mustache,permanent]}},
     {apply,{application,start_boot,[esqlite,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[cowboy_session,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[etzel,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
